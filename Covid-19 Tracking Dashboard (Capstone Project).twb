<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid-19TrackingDashboardCapstoneProject' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose 1st Country' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
        <calculation class='tableau' formula='&quot;Hungary&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei Darussalam&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote dIvoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;CuraÃ§ao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Democratic Republic of the Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Falkland Islands (Malvinas)&quot;' />
          <member value='&quot;Faroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Gibraltar&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guernsey&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Holy See&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Isle of Man&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jersey&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turks and Caicos islands&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United Republic of Tanzania&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;Western Sahara&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <column caption='Choose 2nd Country' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Madagascar&quot;'>
        <calculation class='tableau' formula='&quot;Madagascar&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei Darussalam&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote dIvoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;CuraÃ§ao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Democratic Republic of the Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Falkland Islands (Malvinas)&quot;' />
          <member value='&quot;Faroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Gibraltar&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guernsey&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Holy See&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Isle of Man&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jersey&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turks and Caicos islands&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United Republic of Tanzania&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;Western Sahara&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' inline='true' name='federated.0wrub540cqedlv1634pps1b4luqi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-data-resource-hub/covid-19-case-counts' name='webdata-direct.1cfx8pn0b0zgdw145hoa510c4r8c'>
            <connection APIVersion='' authType='custom' authentication='yes' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;covid-19-data-resource-hub/covid-19-case-counts&quot;,&quot;query&quot;:&quot;SELECT * FROM covid_19_activity&quot;,&quot;queryType&quot;:&quot;sql&quot;,&quot;version&quot;:&quot;1.1.0&quot;}' connectionName='covid-19-data-resource-hub/covid-19-case-counts' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='state=c69ec660-290d-11eb-8c97-653a3c34b40f' username='' usernameAlias='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='webdata-direct.1cfx8pn0b0zgdw145hoa510c4r8c' name='Query Results' table='[QueryTable]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='webdata-direct.1cfx8pn0b0zgdw145hoa510c4r8c' name='Query Results' table='[QueryTable]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>people_positive_cases_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_positive_cases_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_positive_cases_count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[province_state_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>province_state_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[continent_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>continent_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[data_source_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>data_source_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_new_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_death_new_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_death_new_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips_number</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[county_fips_number]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>county_fips_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_3_code</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_alpha_3_code]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_alpha_3_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_short_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_short_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_short_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_2_code</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_alpha_2_code]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_alpha_2_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_new_cases_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_positive_new_cases_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_positive_new_cases_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_death_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_death_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal' />
      <column caption='Death by Country' datatype='integer' name='[Calculation_1261007944027934720]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_death_new_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_death_new_count])}&#13;&#10;END' />
      </column>
      <column caption='Compare countries' datatype='string' name='[Calculation_1261007944047493124]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [country_short_name] IN ([Parameters].[Parameter 1], [Parameters].[Parameter 2])&#13;&#10;THEN [country_short_name]&#13;&#10;END' />
      </column>
      <column caption='Case by State USA' datatype='integer' name='[Case by Country (copy)_1261007944059535365]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [province_state_name]: SUM([people_positive_new_cases_count])}' />
      </column>
      <column caption='Case by Country' datatype='integer' name='[Death by Country (copy)_1261007944039759873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_positive_new_cases_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_positive_new_cases_count])}&#13;&#10;END' />
      </column>
      <column caption='Death by State USA' datatype='integer' name='[Death by Country (copy)_1261007944060047366]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [province_state_name]: SUM([people_death_new_count])}' />
      </column>
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Query Results' datatype='table' name='[__tableau_internal_object_id__].[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]' role='measure' type='quantitative' />
      <column caption='Continent Name' datatype='string' name='[continent_name]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' hidden='true' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' hidden='true' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='integer' name='[county_fips_number]' role='dimension' type='ordinal' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Data Source Name' datatype='string' hidden='true' name='[data_source_name]' role='dimension' type='nominal' />
      <column caption='People Death Count' datatype='integer' datatype-customized='true' name='[people_death_count]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
      <column caption='People Positive Cases Count' datatype='integer' datatype-customized='true' name='[people_positive_cases_count]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
      <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
      <column-instance column='[people_death_count]' derivation='Max' name='[max:people_death_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1261007944047493124]' derivation='None' name='[none:Calculation_1261007944047493124:nk]' pivot='key' type='nominal' />
      <column-instance column='[people_death_count]' derivation='Sum' name='[sum:people_death_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Short Name)' hidden='true' name='[Action (Country Short Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country_short_name]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country Short Name, Province State Name, County Name'>
          <field>[country_short_name]</field>
          <field>[province_state_name]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/aslik/OneDrive/Dokumente/Eigenes Tableau-Repository/Datenquellen/federated.0wrub540cqedlv1634pps1b4luqi_187xkx212gywo11h7e5ak1cixrc0.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/17/2020 07:52:44 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='covid-19-data-resource-hub/covid-19-case-counts' increment-value='%null%' refresh-type='create' rows-inserted='1055346' timestamp-start='2020-11-17 19:52:44.248' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>people_positive_cases_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_positive_cases_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_positive_cases_count</remote-alias>
              <ordinal>0</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16519</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>1</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8468</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province_state_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province_state_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province_state_name</remote-alias>
              <ordinal>2</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>report_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[report_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>report_date</remote-alias>
              <ordinal>3</ordinal>
              <family>Query Results</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>349</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_death_new_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_death_new_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_death_new_count</remote-alias>
              <ordinal>5</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>551</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips_number</remote-alias>
              <ordinal>6</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16964</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_short_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_short_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_short_name</remote-alias>
              <ordinal>7</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>847</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_positive_new_cases_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_positive_new_cases_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_positive_new_cases_count</remote-alias>
              <ordinal>8</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2076</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_death_count</remote-alias>
              <ordinal>9</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3183</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[sum:people_death_count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[sum:people_death_new_count:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1261007944047493124:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose 1st Country' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
          <calculation class='tableau' formula='&quot;Hungary&quot;' />
        </column>
        <column caption='Choose 2nd Country' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Madagascar&quot;'>
          <calculation class='tableau' formula='&quot;Madagascar&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Query Results' id='QueryTable_E2CF31D80A994F1AB1C9156062C8ADE1'>
            <properties context=''>
              <relation connection='webdata-direct.1cfx8pn0b0zgdw145hoa510c4r8c' name='Query Results' table='[QueryTable]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases and Deaths on Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontsize='18'>Cases and Deaths on Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.0wrub540cqedlv1634pps1b4luqi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wrub540cqedlv1634pps1b4luqi'>
            <column caption='Death by State USA' datatype='integer' name='[Death by Country (copy)_1261007944060047366]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [province_state_name]: SUM([people_death_new_count])}' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Death by Country (copy)_1261007944060047366]' derivation='Max' name='[max:Death by Country (copy)_1261007944060047366:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_death_count]' derivation='Max' name='[max:people_death_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_positive_cases_count]' derivation='Max' name='[max:people_positive_cases_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column caption='People Death Count' datatype='integer' datatype-customized='true' name='[people_death_count]' role='measure' type='quantitative' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive Cases Count' datatype='integer' datatype-customized='true' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wrub540cqedlv1634pps1b4luqi].[Action (Country Short Name)]'>
            <groupfilter function='level-members' level='[country_short_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wrub540cqedlv1634pps1b4luqi].[Action (Country Short Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[Latitude (generated)]' field-type='quantitative' max='17292212.968448289' min='-10387228.731561884' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[Longitude (generated)]' field-type='quantitative' max='24863423.0741066' min='-20042262.270883076' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.0wrub540cqedlv1634pps1b4luqi].[Longitude (generated)]' field-type='quantitative' fold='true' max='24863423.0741066' min='-20042262.270883076' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]' />
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[max:Death by Country (copy)_1261007944060047366:qk]' />
              <size column='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]' />
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.637182354927063' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_positive_cases_count:qk]' />
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' />
              <geometry column='[federated.0wrub540cqedlv1634pps1b4luqi].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wrub540cqedlv1634pps1b4luqi].[Latitude (generated)]</rows>
        <cols>([federated.0wrub540cqedlv1634pps1b4luqi].[Longitude (generated)] + [federated.0wrub540cqedlv1634pps1b4luqi].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{6D2BF3DE-0AF3-439F-A95D-4FE5EFC9F869}' />
    </worksheet>
    <worksheet name='Compare any Two Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='16'>Compare any Two Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.0wrub540cqedlv1634pps1b4luqi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose 1st Country' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
              <calculation class='tableau' formula='&quot;Hungary&quot;' />
            </column>
            <column caption='Choose 2nd Country' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Madagascar&quot;'>
              <calculation class='tableau' formula='&quot;Madagascar&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wrub540cqedlv1634pps1b4luqi'>
            <column caption='Death by Country' datatype='integer' name='[Calculation_1261007944027934720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_death_new_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_death_new_count])}&#13;&#10;END' />
            </column>
            <column caption='Compare countries' datatype='string' name='[Calculation_1261007944047493124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [country_short_name] IN ([Parameters].[Parameter 1], [Parameters].[Parameter 2])&#13;&#10;THEN [country_short_name]&#13;&#10;END' />
            </column>
            <column caption='Case by Country' datatype='integer' name='[Death by Country (copy)_1261007944039759873]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_positive_new_cases_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_positive_new_cases_count])}&#13;&#10;END' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1261007944027934720]' derivation='Sum' name='[cum:sum:Calculation_1261007944027934720:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Death by Country (copy)_1261007944039759873]' derivation='Sum' name='[cum:sum:Death by Country (copy)_1261007944039759873:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Calculation_1261007944047493124]' derivation='None' name='[none:Calculation_1261007944047493124:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wrub540cqedlv1634pps1b4luqi].[Action (Country Short Name)]'>
            <groupfilter function='level-members' level='[country_short_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1261007944047493124:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Calculation_1261007944047493124:nk]' member='&quot;Madagascar&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]</column>
            <column>[federated.0wrub540cqedlv1634pps1b4luqi].[Action (Country Short Name)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[none:report_date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' />
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Calculation_1261007944027934720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' />
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Death by Country (copy)_1261007944039759873:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' />
              <lod column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Calculation_1261007944027934720:qk] + [federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Death by Country (copy)_1261007944039759873:qk])</rows>
        <cols>[federated.0wrub540cqedlv1634pps1b4luqi].[none:report_date:qk]</cols>
      </table>
      <simple-id uuid='{438E063E-E48F-4772-9EC6-D7CC8527A43D}' />
    </worksheet>
    <worksheet name='Daily and Total Cases by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontsize='18'>Daily and Total Cases by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.0wrub540cqedlv1634pps1b4luqi' />
          </datasources>
          <datasource-dependencies datasource='federated.0wrub540cqedlv1634pps1b4luqi'>
            <column caption='Case by Country' datatype='integer' name='[Death by Country (copy)_1261007944039759873]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_positive_new_cases_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_positive_new_cases_count])}&#13;&#10;END' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Death by Country (copy)_1261007944039759873]' derivation='Sum' name='[cum:sum:Death by Country (copy)_1261007944039759873:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Death by Country (copy)_1261007944039759873]' derivation='Sum' name='[sum:Death by Country (copy)_1261007944039759873:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]'>
            <groupfilter function='member' level='[none:country_short_name:nk]' member='&quot;Afghanistan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[none:report_date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[sum:Death by Country (copy)_1261007944039759873:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Death by Country (copy)_1261007944039759873:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wrub540cqedlv1634pps1b4luqi].[sum:Death by Country (copy)_1261007944039759873:qk] + [federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Death by Country (copy)_1261007944039759873:qk])</rows>
        <cols>[federated.0wrub540cqedlv1634pps1b4luqi].[none:report_date:qk]</cols>
      </table>
      <simple-id uuid='{7D0D61EF-9A6E-4473-908C-E3A615F77D65}' />
    </worksheet>
    <worksheet name='Daily and Total Deaths by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontsize='18'>Daily and Total Deaths by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.0wrub540cqedlv1634pps1b4luqi' />
          </datasources>
          <datasource-dependencies datasource='federated.0wrub540cqedlv1634pps1b4luqi'>
            <column caption='Death by Country' datatype='integer' name='[Calculation_1261007944027934720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_death_new_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_death_new_count])}&#13;&#10;END' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1261007944027934720]' derivation='Sum' name='[cum:sum:Calculation_1261007944027934720:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1261007944027934720]' derivation='Sum' name='[sum:Calculation_1261007944027934720:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]'>
            <groupfilter function='member' level='[none:country_short_name:nk]' member='&quot;Afghanistan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[sum:Calculation_1261007944027934720:qk]' scope='rows' value='Daily Deaths' />
            <format attr='title' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Calculation_1261007944027934720:qk]' scope='rows' value='Running Sum of Deaths' />
            <format attr='title' class='0' field='[federated.0wrub540cqedlv1634pps1b4luqi].[none:report_date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[sum:Calculation_1261007944027934720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Calculation_1261007944027934720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wrub540cqedlv1634pps1b4luqi].[sum:Calculation_1261007944027934720:qk] + [federated.0wrub540cqedlv1634pps1b4luqi].[cum:sum:Calculation_1261007944027934720:qk])</rows>
        <cols>[federated.0wrub540cqedlv1634pps1b4luqi].[none:report_date:qk]</cols>
      </table>
      <simple-id uuid='{DD4D89C1-C6D5-45D7-9F77-92DBA005C1BC}' />
    </worksheet>
    <worksheet name='Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Total Cases and Deaths Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.0wrub540cqedlv1634pps1b4luqi' />
          </datasources>
          <datasource-dependencies datasource='federated.0wrub540cqedlv1634pps1b4luqi'>
            <column caption='Death by Country' datatype='integer' name='[Calculation_1261007944027934720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_death_new_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_death_new_count])}&#13;&#10;END' />
            </column>
            <column caption='Case by Country' datatype='integer' name='[Death by Country (copy)_1261007944039759873]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [country_short_name]=&quot;United States&quot; THEN&#13;&#10;{ INCLUDE [province_state_name]: SUM([people_positive_new_cases_count])}&#13;&#10;ELSE { INCLUDE [country_short_name]: SUM([people_positive_new_cases_count])}&#13;&#10;END' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1261007944027934720]' derivation='Max' name='[max:Calculation_1261007944027934720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death by Country (copy)_1261007944039759873]' derivation='Max' name='[max:Death by Country (copy)_1261007944039759873:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1261007944027934720]' derivation='Sum' name='[sum:Calculation_1261007944027934720:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wrub540cqedlv1634pps1b4luqi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[max:Death by Country (copy)_1261007944039759873:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[max:Calculation_1261007944027934720:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wrub540cqedlv1634pps1b4luqi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[max:Death by Country (copy)_1261007944039759873:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wrub540cqedlv1634pps1b4luqi].[sum:Calculation_1261007944027934720:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cote dIvoire&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Sint Maarten&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;Turks and Caicos islands&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Timor Leste&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wrub540cqedlv1634pps1b4luqi].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wrub540cqedlv1634pps1b4luqi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</rows>
        <cols>[federated.0wrub540cqedlv1634pps1b4luqi].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1196C0C0-2120-47F4-BBF1-C3E8B11203FB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.0wrub540cqedlv1634pps1b4luqi' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose 1st Country' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
          <calculation class='tableau' formula='&quot;Hungary&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Anguilla&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bermuda&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;British Virgin Islands&quot;' />
            <member value='&quot;Brunei Darussalam&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Cayman Islands&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote dIvoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;CuraÃ§ao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Democratic Republic of the Congo&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Falkland Islands (Malvinas)&quot;' />
            <member value='&quot;Faroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Gibraltar&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guernsey&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Holy See&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Isle of Man&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jersey&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Marshall Islands&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Monaco&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Montserrat&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;San Marino&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Sint Maarten&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor Leste&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turks and Caicos islands&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United Republic of Tanzania&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Wallis and Futuna&quot;' />
            <member value='&quot;Western Sahara&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
        <column caption='Choose 2nd Country' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Madagascar&quot;'>
          <calculation class='tableau' formula='&quot;Madagascar&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Anguilla&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bermuda&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;British Virgin Islands&quot;' />
            <member value='&quot;Brunei Darussalam&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Cayman Islands&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote dIvoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;CuraÃ§ao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Democratic Republic of the Congo&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Falkland Islands (Malvinas)&quot;' />
            <member value='&quot;Faroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Gibraltar&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guernsey&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Holy See&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Isle of Man&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jersey&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Marshall Islands&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Monaco&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Montserrat&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;San Marino&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Sint Maarten&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor Leste&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turks and Caicos islands&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United Republic of Tanzania&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Wallis and Futuna&quot;' />
            <member value='&quot;Western Sahara&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0wrub540cqedlv1634pps1b4luqi'>
        <column caption='Compare countries' datatype='string' name='[Calculation_1261007944047493124]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [country_short_name] IN ([Parameters].[Parameter 1], [Parameters].[Parameter 2])&#13;&#10;THEN [country_short_name]&#13;&#10;END' />
        </column>
        <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Calculation_1261007944047493124]' derivation='None' name='[none:Calculation_1261007944047493124:nk]' pivot='key' type='nominal' />
        <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='5' param='horz' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98142' id='3' w='89378' x='483' y='929'>
              <zone h='98142' id='1' name='Cases and Deaths on Map' w='42486' x='47375' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='9' name='Table' w='18889' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='10' name='Compare any Two Countries' w='46892' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='15' name='Daily and Total Deaths by Country' w='28003' x='19372' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98142' id='4' is-fixed='true' param='vert' w='9656' x='89861' y='929'>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='6504' id='13' mode='compact' param='[Parameters].[Parameter 1]' w='9656' x='89861' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='6504' id='14' mode='compact' param='[Parameters].[Parameter 2]' w='9656' x='89861' y='7433'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='14866' id='11' name='Compare any Two Countries' param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' w='9656' x='89861' y='13937'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8362' id='12' name='Compare any Two Countries' pane-specification-id='3' param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' w='9656' x='89861' y='28803'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='61906' id='16' name='Daily and Total Deaths by Country' param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' values='cascading' w='9656' x='89861' y='37165'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0538BC57-AF38-477F-92FB-9E08A24437BD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Daily and Total Deaths by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</field>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A46F2ADE-C7E4-4532-9860-EBDDC9C571F5}' />
    </window>
    <window class='worksheet' name='Daily and Total Cases by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</field>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40EAD750-3CD2-4741-927F-EC4A5AEE2912}' />
    </window>
    <window class='worksheet' name='Compare any Two Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]</field>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</field>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5A49474-778A-438B-ACA3-E375AE7F4698}' />
    </window>
    <window class='worksheet' name='Cases and Deaths on Map'>
      <cards>
        <edge name='left'>
          <strip size='221'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_positive_cases_count:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2763A177-7B15-467D-ABA9-4EA9052B197D}' />
    </window>
    <window class='worksheet' name='Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wrub540cqedlv1634pps1b4luqi].[none:country_short_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E2FD5A2-8545-4003-9505-E6514557B0AD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cases and Deaths on Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0wrub540cqedlv1634pps1b4luqi].[max:people_death_count:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Compare any Two Countries'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0wrub540cqedlv1634pps1b4luqi].[none:Calculation_1261007944047493124:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Daily and Total Deaths by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Table' />
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{E79B173E-DA66-4E9B-BAC2-18B6B7FFABA6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases and Deaths on Map' width='192'>
      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
      sGsQ6n260f//ptI7XLtZdw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Compare any Two Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily and Total Cases by Country' width='192'>
      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
      hc+8+Hz2bWll7Z1jJUUAqKo+EdK5P+l0GpPJRDKZRJZlHA4HiqIQj8cxGo1Zh3an00k8Hsdm
      s2Xn9JLPx9rPP6DwH/1PD935AcRvf/vb397qwODAAGUVlbjdudis5geuWNO0bDhqHZ17iUaj
      fOc736G1tZX3338fVVUpLS0lGo0yNDTElStXmJ2dJZVKEYlE6O3txe/3U1lZmSl/5izW3bsQ
      T5zgwoULFBYWcvr0aWw2Gy6Xi6GhIbq7u8nLy+PMmTMoikIqlWJqaoqSkjvazW1NIRKxMAsL
      C0Si8cf/beg8czgcDvbf3rCqrKxkYGCAdDqN2+0mJyeHl19+mcrKSsbGxpiZmeHll18mnU4D
      IAcCJG7exPn650mn0ySTSbq6unj++ee5desWAFNTUxgMBhKJBIFAAKvVitlsxu/3b2jHtgJg
      M5vw+XxEYroA6Ow8wWCQnp4eent7SSaTiKJIIBAgHo8TDAYpKSkhkUhgMBioqKjgZz/7GU6n
      E03TCL/zY5yvvYbBbsftdmMymWhvb+fq1atZIXnppZeoq6tjcXGRr33ta/T29lJQULDJL2Db
      RXDXtXNMzS9TXLuf5w7ufuAb1DfCdB6U+fl5SktLs/P8e9E0jfDb75AaGqbon/xjBFHE6/XS
      0dGR1e4cPHiQyclJXC4Xc3NztLW10dXVRXV1NZFIhJmZGV555RXcbjdwHwEY7r3B/PIqRkcB
      LxzbKjzi/dEFQGenkQMBlv+3f4nj5ZdwffHNLc9Z786fNJLJlqIWWQ1SVrcLIwpNTU0P2Vwd
      nZ1D0zRW/+S7GNwunG9+YdvzBEF4oDA+W2qBunpu4TbEWJJziawsUFVZ/lAN1rVAOutMTExw
      7tw5qqqqOHv2LFNTU9TX16OqKn/yJ39CbW0tP/rRj9A0jaWlJXp7eykvL8dozGjqk13dpMbH
      KfjDP6RraIh0Oo2qqpw/f56CggIsFgvvvvsukiQRCAS4desWeXl5nD17FrPZvK0l6ZYjQFN1
      OZf6lzlxoJrSsqrH963oPDPU19fjcDjIycnJvgbo6+ujrKwsq+/3+/10d3eTTCYJhUIAKGtr
      hN/5Mfl/629iLPSQl5fH6uoq586dw2AwoCgKiUSC1dVVRFFkaWmJxsZGfvGLX3D8+HF6e3u3
      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
    </thumbnail>
    <thumbnail height='192' name='Daily and Total Deaths by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table' width='192'>
      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
      uAd5dtMUNDIRr0fA21OGRu1meNiLaJDfHI1ubcTrxe52o1Kr0fpFsWztGq789iCDbjcqmeym
      1rwoIuKg8tJpXPGr+cGWbGztV3jp1VzpPpCOU2Dw9cUQE8y3/+5xjAoZgtcLcjli8AK+FZ9N
      R2Mp772yk5yELDZlGu/4bPcSOp0Os9ksdcK+vj7CwsYejKIoUlNTQ3h4+G2d6cMICgpi06ZN
      NDc3Azf5SHa7/Z5QKlJSUkhOTmZ4eJhLly5x6dIl7r//fuLj43nuueewWCzk5eVx4cIF1q1b
      JwXuyHuQyWQYjUbmzZtHXl6epKxXUVGBx+OhpaUFu93OmjVrsNvtuN1ulEolVqsVQRCk9sYc
      AJOXr6Xg1VPs3t+Dn6eH4o4g1j+VhU42NKbzE7Pmsn/vaQ4dGSJ79iIWPriW8396i1ec9cQF
      qBhy+rL2wamsvy+EPb/7M50zEumq6cB9K7fa3s2RPe8xqAkn1E9DT30JIdOWEKHToJw0g8Cc
      w+zb58O07BmExsTQm3OREzlmnC1FtNlvzmGC4zOJlb3Lnj1HyJoynRnZ95FV+DL/+V87mZpo
      wuWQkTlrOv1FR6l3+uGnduDR+hPg8/nYfCckJHD48GEyMzNxOp3U1dXdsaTybnA6nVRUVLB2
      7dq/SrkY0SudMmWK5K6+dOnScdeI6u3txW63Ex4ejk6nQ61W09fXR19fHzabbdTvH56mmc1m
      mpubmTRpEnK5nKqqKvz9/Vm2bJnkvNPX18fOnTv5xje+gUwmIzc3l5qaGlJSUrhw4QIpKSkS
      43bMynCi4GGwq5mapk48qAmLSyY2zA+5x0lzXS3y0ESi/LXYexqpG9KQEhfMQEs1w5poEsON
      CG4bjTeu02UViU2bSrhRTnfTDRo7BxGVekKi4ogP90d0mCkrq8KGnpAANS5FEKmxwchk3Nxx
      6u+itr4Vq9ODxhhIXGI8AT5qZKKbjrobNHZbCErIJMHkpfp6DQMeNRFRIbiGbUTFx6NTCvQ2
      11DT1o9fdCrp0Sbs5lauV7fiFOX4hUaTEB2Kd6iD+sY2hp0CelMUmanRqD7BOlAQBC5fvsyp
      U6fo6+vD4XAQFhbGxo0biYyM5OLFizzwwANSQbrNZsNsNhMdHc3y5cul+t38/HzkcjmLFy9m
      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
      UrZddjT/BMYdrAf0uufgAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
